{
  "version": 3,
  "sources": ["browser-route-module:/Users/hamza/Documents/Repos/smart-contract-ui/app/routes/contract.tsx?browser", "../../../app/routes/contract.tsx"],
  "sourcesContent": ["export { default } from \"/Users/hamza/Documents/Repos/smart-contract-ui/app/routes/contract.tsx\";", "import { ActionFunction, json } from '@remix-run/node';\nimport { useActionData, useFetcher } from '@remix-run/react';\nimport { FC, Fragment, useState, useEffect } from 'react';\n\nexport const action: ActionFunction = async ({ request }) => {\n    const form = await request.formData();\n\n    const rpcUrl = form.get('rpc-url');\n    const privateKey = form.get('private-key');\n    // @ts-ignore\n    const contractAbi = form.get('contract-abi') as string;\n    const contractAddress = form.get('contract-address');\n\n    return json({\n        rpcUrl,\n        contractAbi: JSON.parse(contractAbi),\n        contractAbiString: contractAbi,\n        contractAddress,\n        privateKey,\n    });\n};\n\nexport default function Contract() {\n    const data = useActionData();\n    const fetcher = useFetcher();\n\n    const contractTransaction = async (\n        call: boolean,\n        method: string,\n        args?: any[]\n    ) => {\n        fetcher.submit(\n            { ...data, call, method, args, contractAbi: data.contractAbiString },\n            { method: 'post', action: '/web3-tx' }\n        );\n    };\n\n    return (\n        <div style={{ fontFamily: 'system-ui, sans-serif', lineHeight: '1.4' }}>\n            {data &&\n                data.contractAbi.map((item: any, key: number) => {\n                    switch (item.type) {\n                        case 'function':\n                            return (\n                                <ContractFunction\n                                    key={key}\n                                    name={item.name}\n                                    args={item.inputs}\n                                    onSubmit={(value) =>\n                                        contractTransaction(\n                                            item.stateMutability === 'view',\n                                            item.name,\n                                            item.inputs.reduce(\n                                                (acc: any[], curr: any) => {\n                                                    const v = value[curr.name];\n                                                    acc.push(v);\n                                                    return acc;\n                                                },\n                                                []\n                                            )\n                                        )\n                                    }\n                                />\n                            );\n                        default:\n                            return null;\n                    }\n                })}\n        </div>\n    );\n}\n\nconst ContractFunction: FC<{\n    name: string;\n    args: { name: string; type: string }[];\n    onSubmit: (value: any) => void;\n}> = ({ name, args, onSubmit }) => {\n    const [state, setState] = useState({});\n\n    return (\n        <div>\n            <h3>{name}</h3>\n            {args.map((item, key) => (\n                <Fragment key={key}>\n                    <label>\n                        {item.name} ({item.type})\n                        <input\n                            type='text'\n                            onChange={(e) =>\n                                setState((prev) => ({\n                                    ...prev,\n                                    [item.name]: e.target.value,\n                                }))\n                            }\n                        />\n                    </label>\n                    <br />\n                </Fragment>\n            ))}\n            <button onClick={() => onSubmit(state)}>Submit</button>\n        </div>\n    );\n};\n"],
  "mappings": ";;;;;;;;;;;;AAAA;;;ACAA;AAEA,oBAAkD;AAoBnC,oBAAoB;AAC/B,QAAM,OAAO;AACb,QAAM,UAAU;AAEhB,QAAM,sBAAsB,OACxB,MACA,QACA,SACC;AACD,YAAQ,OACJ,KAAK,MAAM,MAAM,QAAQ,MAAM,aAAa,KAAK,qBACjD,EAAE,QAAQ,QAAQ,QAAQ;AAAA;AAIlC,SACI,oCAAC,OAAD;AAAA,IAAK,OAAO,EAAE,YAAY,yBAAyB,YAAY;AAAA,KAC1D,QACG,KAAK,YAAY,IAAI,CAAC,MAAW,QAAgB;AAC7C,YAAQ,KAAK;AAAA,WACJ;AACD,eACI,oCAAC,kBAAD;AAAA,UACI;AAAA,UACA,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,UACX,UAAU,CAAC,UACP,oBACI,KAAK,oBAAoB,QACzB,KAAK,MACL,KAAK,OAAO,OACR,CAAC,KAAY,SAAc;AACvB,kBAAM,IAAI,MAAM,KAAK;AACrB,gBAAI,KAAK;AACT,mBAAO;AAAA,aAEX;AAAA;AAAA;AAOpB,eAAO;AAAA;AAAA;AAAA;AAOnC,IAAM,mBAID,CAAC,EAAE,MAAM,MAAM,eAAe;AAC/B,QAAM,CAAC,OAAO,YAAY,4BAAS;AAEnC,SACI,oCAAC,OAAD,MACI,oCAAC,MAAD,MAAK,OACJ,KAAK,IAAI,CAAC,MAAM,QACb,oCAAC,wBAAD;AAAA,IAAU;AAAA,KACN,oCAAC,SAAD,MACK,KAAK,MAAK,MAAG,KAAK,MAAK,KACxB,oCAAC,SAAD;AAAA,IACI,MAAK;AAAA,IACL,UAAU,CAAC,MACP,SAAS,CAAC,SAAU;AAAA,SACb;AAAA,OACF,KAAK,OAAO,EAAE,OAAO;AAAA;AAAA,OAKtC,oCAAC,MAAD,SAGR,oCAAC,UAAD;AAAA,IAAQ,SAAS,MAAM,SAAS;AAAA,KAAQ;AAAA;",
  "names": []
}
